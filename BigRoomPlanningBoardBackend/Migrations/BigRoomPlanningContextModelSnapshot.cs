// <auto-generated />
using System;
using BigRoomPlanningBoardBackend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigRoomPlanningBoardBackend.Migrations
{
    [DbContext(typeof(BigRoomPlanningContext))]
    partial class BigRoomPlanningContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Dependency", b =>
                {
                    b.Property<int>("DependencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("DependencyId");

                    b.ToTable("Dependencies");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.DependencyBoard", b =>
                {
                    b.Property<int>("DependencyBoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuarterYearId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DependencyBoardId");

                    b.ToTable("DependencyBoards");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Events.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecievedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasDiscriminator().HasValue("Event");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.QuarterYear", b =>
                {
                    b.Property<int>("QuarterYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BigRoomPlanningAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("TEXT");

                    b.HasKey("QuarterYearId");

                    b.ToTable("QuarterYears");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Session", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Squad", b =>
                {
                    b.Property<int>("SquadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SquadId");

                    b.ToTable("Squads");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.SquadBoard", b =>
                {
                    b.Property<int>("SquadBoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuarterYearId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquadId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SquadBoardId");

                    b.ToTable("SquadBoards");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequirementIds")
                        .HasColumnType("TEXT");

                    b.Property<int>("SquadId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SquardBoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetIds")
                        .HasColumnType("TEXT");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Events.Types.AddSessionEvent", b =>
                {
                    b.HasBaseType("BigRoomPlanningBoardBackend.Events.Event");

                    b.Property<string>("SessionName")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("AddSessionEvent");
                });

            modelBuilder.Entity("BigRoomPlanningBoardBackend.Events.Types.AddSquadEvent", b =>
                {
                    b.HasBaseType("BigRoomPlanningBoardBackend.Events.Event");

                    b.Property<int?>("SquadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SquadName")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("AddSquadEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
